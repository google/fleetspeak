on: push
jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      MYSQL_TEST_USER: root
      MYSQL_TEST_PASS: root
      MYSQL_TEST_ADDR: 127.0.0.1:3306
      MYSQL_TEST_E2E_DB: e2e_test_db
    steps:
      - uses: actions/checkout@v2
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.MYSQL_TEST_E2E_DB }};' -u${{ env.MYSQL_TEST_USER }} -p${{ env.MYSQL_TEST_PASS }}
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15'
      - name: Set up Go
        run: |
          sudo apt install debhelper devscripts dh-systemd fakeroot libparse-debcontrol-perl
          go get -u golang.org/x/lint/golint
          go get -u -v github.com/golang/protobuf/protoc-gen-go@v1.4.2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('*_python/**') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python
        run: |
          pip install -e ./fleetspeak_python
          pip install -e ./frr_python
      - name: Lint
        # We want to address all golint warnings, except for
        # https://github.com/golang/go/wiki/CodeReviewComments#doc-comments
        # TODO(mbushkov): make golint and go vet checks actionable.
        run: |
          golint ./... | grep -v 'should have comment or be unexported' || true
          go vet ./... || true
      - name: Check generated protos
        run: |
          fleetspeak/generate_go_py_protos.sh
          if [[ "$(git status --porcelain | grep .pb.go)" != "" ]]; then
            echo "At least one generated proto file is not in sync with the committed generated proto files."
            echo "Please run \`PATH=~/go/bin:\$PATH fleetspeak/generate_go_py_protos.sh\` with protoc-gen-go version 1.4.2."
            echo "pip packages:"
            pip freeze
            exit 1;
          fi;
          echo "git status is clean; generated protos are consistent"
      - name: Build
        run: |
          fleetspeak/build.sh
      - name: Test
        run: |
          fleetspeak/test.sh
      - name: Check DEB installation
        # Install the built package and check that the fleetspeak-config program
        # doesn't error out.
        run: |
          cd fleetspeak
          ./build-pkgs.sh
          sudo ./test-package.sh ./fleetspeak-server_$(cat ../VERSION)_amd64.deb ./fleetspeak-client_$(cat ../VERSION)_amd64.deb