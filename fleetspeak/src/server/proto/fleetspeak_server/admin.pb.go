// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/server/proto/fleetspeak_server/admin.proto

package fleetspeak_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	fleetspeak "github.com/google/fleetspeak/fleetspeak/src/common/proto/fleetspeak"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateBroadcastRequest struct {
	Broadcast            *Broadcast `protobuf:"bytes,1,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Limit                uint64     `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateBroadcastRequest) Reset()         { *m = CreateBroadcastRequest{} }
func (m *CreateBroadcastRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBroadcastRequest) ProtoMessage()    {}
func (*CreateBroadcastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{0}
}

func (m *CreateBroadcastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBroadcastRequest.Unmarshal(m, b)
}
func (m *CreateBroadcastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBroadcastRequest.Marshal(b, m, deterministic)
}
func (m *CreateBroadcastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBroadcastRequest.Merge(m, src)
}
func (m *CreateBroadcastRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBroadcastRequest.Size(m)
}
func (m *CreateBroadcastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBroadcastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBroadcastRequest proto.InternalMessageInfo

func (m *CreateBroadcastRequest) GetBroadcast() *Broadcast {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *CreateBroadcastRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListActiveBroadcastsRequest struct {
	// If set, only return broadcasts with the given service_name.
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListActiveBroadcastsRequest) Reset()         { *m = ListActiveBroadcastsRequest{} }
func (m *ListActiveBroadcastsRequest) String() string { return proto.CompactTextString(m) }
func (*ListActiveBroadcastsRequest) ProtoMessage()    {}
func (*ListActiveBroadcastsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{1}
}

func (m *ListActiveBroadcastsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActiveBroadcastsRequest.Unmarshal(m, b)
}
func (m *ListActiveBroadcastsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActiveBroadcastsRequest.Marshal(b, m, deterministic)
}
func (m *ListActiveBroadcastsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActiveBroadcastsRequest.Merge(m, src)
}
func (m *ListActiveBroadcastsRequest) XXX_Size() int {
	return xxx_messageInfo_ListActiveBroadcastsRequest.Size(m)
}
func (m *ListActiveBroadcastsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActiveBroadcastsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActiveBroadcastsRequest proto.InternalMessageInfo

func (m *ListActiveBroadcastsRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type ListActiveBroadcastsResponse struct {
	Broadcasts           []*Broadcast `protobuf:"bytes,1,rep,name=broadcasts,proto3" json:"broadcasts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListActiveBroadcastsResponse) Reset()         { *m = ListActiveBroadcastsResponse{} }
func (m *ListActiveBroadcastsResponse) String() string { return proto.CompactTextString(m) }
func (*ListActiveBroadcastsResponse) ProtoMessage()    {}
func (*ListActiveBroadcastsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{2}
}

func (m *ListActiveBroadcastsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListActiveBroadcastsResponse.Unmarshal(m, b)
}
func (m *ListActiveBroadcastsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListActiveBroadcastsResponse.Marshal(b, m, deterministic)
}
func (m *ListActiveBroadcastsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActiveBroadcastsResponse.Merge(m, src)
}
func (m *ListActiveBroadcastsResponse) XXX_Size() int {
	return xxx_messageInfo_ListActiveBroadcastsResponse.Size(m)
}
func (m *ListActiveBroadcastsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActiveBroadcastsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActiveBroadcastsResponse proto.InternalMessageInfo

func (m *ListActiveBroadcastsResponse) GetBroadcasts() []*Broadcast {
	if m != nil {
		return m.Broadcasts
	}
	return nil
}

type ListClientsRequest struct {
	// If non-empty, restricts results to the listed client_ids. If empty, all
	// clients known to the system will be listed.
	ClientIds            [][]byte `protobuf:"bytes,1,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClientsRequest) Reset()         { *m = ListClientsRequest{} }
func (m *ListClientsRequest) String() string { return proto.CompactTextString(m) }
func (*ListClientsRequest) ProtoMessage()    {}
func (*ListClientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{3}
}

func (m *ListClientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClientsRequest.Unmarshal(m, b)
}
func (m *ListClientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClientsRequest.Marshal(b, m, deterministic)
}
func (m *ListClientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClientsRequest.Merge(m, src)
}
func (m *ListClientsRequest) XXX_Size() int {
	return xxx_messageInfo_ListClientsRequest.Size(m)
}
func (m *ListClientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClientsRequest proto.InternalMessageInfo

func (m *ListClientsRequest) GetClientIds() [][]byte {
	if m != nil {
		return m.ClientIds
	}
	return nil
}

type ListClientsResponse struct {
	Clients              []*Client `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListClientsResponse) Reset()         { *m = ListClientsResponse{} }
func (m *ListClientsResponse) String() string { return proto.CompactTextString(m) }
func (*ListClientsResponse) ProtoMessage()    {}
func (*ListClientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{4}
}

func (m *ListClientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClientsResponse.Unmarshal(m, b)
}
func (m *ListClientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClientsResponse.Marshal(b, m, deterministic)
}
func (m *ListClientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClientsResponse.Merge(m, src)
}
func (m *ListClientsResponse) XXX_Size() int {
	return xxx_messageInfo_ListClientsResponse.Size(m)
}
func (m *ListClientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClientsResponse proto.InternalMessageInfo

func (m *ListClientsResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

type Client struct {
	ClientId               []byte               `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Labels                 []*fleetspeak.Label  `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	LastContactTime        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=last_contact_time,json=lastContactTime,proto3" json:"last_contact_time,omitempty"`
	LastContactAddress     string               `protobuf:"bytes,4,opt,name=last_contact_address,json=lastContactAddress,proto3" json:"last_contact_address,omitempty"`
	LastContactStreamingTo string               `protobuf:"bytes,7,opt,name=last_contact_streaming_to,json=lastContactStreamingTo,proto3" json:"last_contact_streaming_to,omitempty"`
	LastClock              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_clock,json=lastClock,proto3" json:"last_clock,omitempty"`
	Blacklisted            bool                 `protobuf:"varint,6,opt,name=blacklisted,proto3" json:"blacklisted,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{5}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *Client) GetLabels() []*fleetspeak.Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Client) GetLastContactTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastContactTime
	}
	return nil
}

func (m *Client) GetLastContactAddress() string {
	if m != nil {
		return m.LastContactAddress
	}
	return ""
}

func (m *Client) GetLastContactStreamingTo() string {
	if m != nil {
		return m.LastContactStreamingTo
	}
	return ""
}

func (m *Client) GetLastClock() *timestamp.Timestamp {
	if m != nil {
		return m.LastClock
	}
	return nil
}

func (m *Client) GetBlacklisted() bool {
	if m != nil {
		return m.Blacklisted
	}
	return false
}

type GetMessageStatusRequest struct {
	MessageId            []byte   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMessageStatusRequest) Reset()         { *m = GetMessageStatusRequest{} }
func (m *GetMessageStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetMessageStatusRequest) ProtoMessage()    {}
func (*GetMessageStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{6}
}

func (m *GetMessageStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessageStatusRequest.Unmarshal(m, b)
}
func (m *GetMessageStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessageStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetMessageStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessageStatusRequest.Merge(m, src)
}
func (m *GetMessageStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetMessageStatusRequest.Size(m)
}
func (m *GetMessageStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessageStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessageStatusRequest proto.InternalMessageInfo

func (m *GetMessageStatusRequest) GetMessageId() []byte {
	if m != nil {
		return m.MessageId
	}
	return nil
}

type DeletePendingMessagesRequest struct {
	ClientIds            [][]byte `protobuf:"bytes,1,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePendingMessagesRequest) Reset()         { *m = DeletePendingMessagesRequest{} }
func (m *DeletePendingMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePendingMessagesRequest) ProtoMessage()    {}
func (*DeletePendingMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{7}
}

func (m *DeletePendingMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePendingMessagesRequest.Unmarshal(m, b)
}
func (m *DeletePendingMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePendingMessagesRequest.Marshal(b, m, deterministic)
}
func (m *DeletePendingMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePendingMessagesRequest.Merge(m, src)
}
func (m *DeletePendingMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePendingMessagesRequest.Size(m)
}
func (m *DeletePendingMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePendingMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePendingMessagesRequest proto.InternalMessageInfo

func (m *DeletePendingMessagesRequest) GetClientIds() [][]byte {
	if m != nil {
		return m.ClientIds
	}
	return nil
}

type GetMessageStatusResponse struct {
	CreationTime         *timestamp.Timestamp      `protobuf:"bytes,1,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	Result               *fleetspeak.MessageResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetMessageStatusResponse) Reset()         { *m = GetMessageStatusResponse{} }
func (m *GetMessageStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetMessageStatusResponse) ProtoMessage()    {}
func (*GetMessageStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{8}
}

func (m *GetMessageStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMessageStatusResponse.Unmarshal(m, b)
}
func (m *GetMessageStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMessageStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetMessageStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMessageStatusResponse.Merge(m, src)
}
func (m *GetMessageStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetMessageStatusResponse.Size(m)
}
func (m *GetMessageStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMessageStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMessageStatusResponse proto.InternalMessageInfo

func (m *GetMessageStatusResponse) GetCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *GetMessageStatusResponse) GetResult() *fleetspeak.MessageResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type StoreFileRequest struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreFileRequest) Reset()         { *m = StoreFileRequest{} }
func (m *StoreFileRequest) String() string { return proto.CompactTextString(m) }
func (*StoreFileRequest) ProtoMessage()    {}
func (*StoreFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{9}
}

func (m *StoreFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreFileRequest.Unmarshal(m, b)
}
func (m *StoreFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreFileRequest.Marshal(b, m, deterministic)
}
func (m *StoreFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreFileRequest.Merge(m, src)
}
func (m *StoreFileRequest) XXX_Size() int {
	return xxx_messageInfo_StoreFileRequest.Size(m)
}
func (m *StoreFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreFileRequest proto.InternalMessageInfo

func (m *StoreFileRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *StoreFileRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *StoreFileRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListClientContactsRequest struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClientContactsRequest) Reset()         { *m = ListClientContactsRequest{} }
func (m *ListClientContactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListClientContactsRequest) ProtoMessage()    {}
func (*ListClientContactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{10}
}

func (m *ListClientContactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClientContactsRequest.Unmarshal(m, b)
}
func (m *ListClientContactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClientContactsRequest.Marshal(b, m, deterministic)
}
func (m *ListClientContactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClientContactsRequest.Merge(m, src)
}
func (m *ListClientContactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListClientContactsRequest.Size(m)
}
func (m *ListClientContactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClientContactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClientContactsRequest proto.InternalMessageInfo

func (m *ListClientContactsRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

type ListClientContactsResponse struct {
	Contacts             []*ClientContact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListClientContactsResponse) Reset()         { *m = ListClientContactsResponse{} }
func (m *ListClientContactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListClientContactsResponse) ProtoMessage()    {}
func (*ListClientContactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{11}
}

func (m *ListClientContactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClientContactsResponse.Unmarshal(m, b)
}
func (m *ListClientContactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClientContactsResponse.Marshal(b, m, deterministic)
}
func (m *ListClientContactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClientContactsResponse.Merge(m, src)
}
func (m *ListClientContactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListClientContactsResponse.Size(m)
}
func (m *ListClientContactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClientContactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClientContactsResponse proto.InternalMessageInfo

func (m *ListClientContactsResponse) GetContacts() []*ClientContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type ClientContact struct {
	SentNonce            uint64               `protobuf:"fixed64,1,opt,name=sent_nonce,json=sentNonce,proto3" json:"sent_nonce,omitempty"`
	ReceivedNonce        uint64               `protobuf:"fixed64,2,opt,name=received_nonce,json=receivedNonce,proto3" json:"received_nonce,omitempty"`
	ObservedAddress      string               `protobuf:"bytes,3,opt,name=observed_address,json=observedAddress,proto3" json:"observed_address,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ClientContact) Reset()         { *m = ClientContact{} }
func (m *ClientContact) String() string { return proto.CompactTextString(m) }
func (*ClientContact) ProtoMessage()    {}
func (*ClientContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{12}
}

func (m *ClientContact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientContact.Unmarshal(m, b)
}
func (m *ClientContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientContact.Marshal(b, m, deterministic)
}
func (m *ClientContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientContact.Merge(m, src)
}
func (m *ClientContact) XXX_Size() int {
	return xxx_messageInfo_ClientContact.Size(m)
}
func (m *ClientContact) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientContact.DiscardUnknown(m)
}

var xxx_messageInfo_ClientContact proto.InternalMessageInfo

func (m *ClientContact) GetSentNonce() uint64 {
	if m != nil {
		return m.SentNonce
	}
	return 0
}

func (m *ClientContact) GetReceivedNonce() uint64 {
	if m != nil {
		return m.ReceivedNonce
	}
	return 0
}

func (m *ClientContact) GetObservedAddress() string {
	if m != nil {
		return m.ObservedAddress
	}
	return ""
}

func (m *ClientContact) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type BlacklistClientRequest struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlacklistClientRequest) Reset()         { *m = BlacklistClientRequest{} }
func (m *BlacklistClientRequest) String() string { return proto.CompactTextString(m) }
func (*BlacklistClientRequest) ProtoMessage()    {}
func (*BlacklistClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf47f35d729e0b2f, []int{13}
}

func (m *BlacklistClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlacklistClientRequest.Unmarshal(m, b)
}
func (m *BlacklistClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlacklistClientRequest.Marshal(b, m, deterministic)
}
func (m *BlacklistClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlacklistClientRequest.Merge(m, src)
}
func (m *BlacklistClientRequest) XXX_Size() int {
	return xxx_messageInfo_BlacklistClientRequest.Size(m)
}
func (m *BlacklistClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlacklistClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlacklistClientRequest proto.InternalMessageInfo

func (m *BlacklistClientRequest) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateBroadcastRequest)(nil), "fleetspeak.server.CreateBroadcastRequest")
	proto.RegisterType((*ListActiveBroadcastsRequest)(nil), "fleetspeak.server.ListActiveBroadcastsRequest")
	proto.RegisterType((*ListActiveBroadcastsResponse)(nil), "fleetspeak.server.ListActiveBroadcastsResponse")
	proto.RegisterType((*ListClientsRequest)(nil), "fleetspeak.server.ListClientsRequest")
	proto.RegisterType((*ListClientsResponse)(nil), "fleetspeak.server.ListClientsResponse")
	proto.RegisterType((*Client)(nil), "fleetspeak.server.Client")
	proto.RegisterType((*GetMessageStatusRequest)(nil), "fleetspeak.server.GetMessageStatusRequest")
	proto.RegisterType((*DeletePendingMessagesRequest)(nil), "fleetspeak.server.DeletePendingMessagesRequest")
	proto.RegisterType((*GetMessageStatusResponse)(nil), "fleetspeak.server.GetMessageStatusResponse")
	proto.RegisterType((*StoreFileRequest)(nil), "fleetspeak.server.StoreFileRequest")
	proto.RegisterType((*ListClientContactsRequest)(nil), "fleetspeak.server.ListClientContactsRequest")
	proto.RegisterType((*ListClientContactsResponse)(nil), "fleetspeak.server.ListClientContactsResponse")
	proto.RegisterType((*ClientContact)(nil), "fleetspeak.server.ClientContact")
	proto.RegisterType((*BlacklistClientRequest)(nil), "fleetspeak.server.BlacklistClientRequest")
}

func init() {
	proto.RegisterFile("fleetspeak/src/server/proto/fleetspeak_server/admin.proto", fileDescriptor_bf47f35d729e0b2f)
}

var fileDescriptor_bf47f35d729e0b2f = []byte{
	// 890 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x6d, 0x6f, 0xe3, 0x44,
	0x10, 0xbe, 0xa4, 0x6d, 0x5a, 0x4f, 0x53, 0xda, 0xee, 0x95, 0xe2, 0xfa, 0x8a, 0x08, 0x46, 0x87,
	0x5a, 0x5e, 0x1c, 0xb8, 0x0a, 0xa9, 0x45, 0xbc, 0x5c, 0xae, 0x70, 0xa8, 0x50, 0x4e, 0xc8, 0xbd,
	0x0f, 0x27, 0x84, 0x88, 0x36, 0xf6, 0x34, 0x5a, 0xea, 0x97, 0xe0, 0xdd, 0x56, 0xea, 0x9f, 0xe0,
	0xcf, 0xf0, 0x8d, 0x9f, 0xc3, 0x2f, 0x41, 0xde, 0x17, 0xdb, 0x49, 0x1d, 0x27, 0x7c, 0x4b, 0x66,
	0x9e, 0xe7, 0x99, 0xf5, 0xce, 0x33, 0xb3, 0x70, 0x76, 0x1d, 0x21, 0x0a, 0x3e, 0x41, 0x7a, 0xd3,
	0xe7, 0x59, 0xd0, 0xe7, 0x98, 0xdd, 0x61, 0xd6, 0x9f, 0x64, 0xa9, 0x48, 0xfb, 0x65, 0x6e, 0xa8,
	0xe3, 0x34, 0x8c, 0x59, 0xe2, 0xc9, 0x2c, 0xd9, 0x2d, 0xd3, 0x9e, 0x4a, 0x3b, 0xef, 0x8d, 0xd3,
	0x74, 0x1c, 0xa1, 0xa2, 0x8f, 0x6e, 0xaf, 0xfb, 0x82, 0xc5, 0xc8, 0x05, 0x8d, 0x27, 0x8a, 0xe3,
	0x9c, 0xcc, 0x94, 0x0b, 0xd2, 0x38, 0x4e, 0x93, 0x07, 0xe5, 0x74, 0x5c, 0x93, 0xbe, 0xf9, 0x7f,
	0x67, 0x1c, 0x65, 0x29, 0x0d, 0x03, 0xca, 0x05, 0x57, 0x7c, 0xf7, 0x0f, 0xd8, 0x3f, 0xcf, 0x90,
	0x0a, 0x7c, 0x61, 0x32, 0x3e, 0xfe, 0x79, 0x8b, 0x5c, 0x90, 0x2f, 0xc1, 0x2a, 0xd0, 0x76, 0xab,
	0xd7, 0x3a, 0xda, 0x7c, 0x76, 0xe8, 0x3d, 0xf8, 0x2c, 0xaf, 0xe4, 0x95, 0x70, 0xb2, 0x07, 0x6b,
	0x11, 0x8b, 0x99, 0xb0, 0xdb, 0xbd, 0xd6, 0xd1, 0xaa, 0xaf, 0xfe, 0xb8, 0xcf, 0xe1, 0xc9, 0x25,
	0xe3, 0x62, 0x10, 0x08, 0x76, 0x57, 0xd6, 0xe3, 0xa6, 0xe0, 0xfb, 0xd0, 0xcd, 0x35, 0x59, 0x80,
	0xc3, 0x84, 0xc6, 0x28, 0x6b, 0x5a, 0xfe, 0xa6, 0x8e, 0xbd, 0xa2, 0x31, 0xba, 0xbf, 0xc1, 0x61,
	0xbd, 0x02, 0x9f, 0xa4, 0x09, 0x47, 0xf2, 0x15, 0x40, 0xf9, 0x85, 0x76, 0xab, 0xb7, 0xb2, 0xf0,
	0xd0, 0x15, 0xbc, 0x7b, 0x02, 0x24, 0x57, 0x3f, 0x8f, 0x18, 0x26, 0xe5, 0xb1, 0xde, 0x05, 0x08,
	0x64, 0x64, 0xc8, 0x42, 0xa5, 0xd9, 0xf5, 0x2d, 0x15, 0xb9, 0x08, 0xb9, 0xfb, 0x23, 0x3c, 0x9e,
	0x22, 0xe9, 0x93, 0x9c, 0xc0, 0xba, 0xc2, 0x98, 0x63, 0x1c, 0xd4, 0x1c, 0x43, 0x91, 0x7c, 0x83,
	0x74, 0xff, 0x6d, 0x43, 0x47, 0xc5, 0xc8, 0x13, 0xb0, 0x8a, 0xaa, 0xf2, 0x26, 0xba, 0xfe, 0x86,
	0x29, 0x4a, 0x8e, 0xa1, 0x13, 0xd1, 0x11, 0x46, 0xdc, 0x6e, 0x4b, 0xed, 0xdd, 0xaa, 0xf6, 0x65,
	0x9e, 0xf1, 0x35, 0x80, 0xbc, 0x84, 0xdd, 0x88, 0x72, 0x31, 0x0c, 0xd2, 0x44, 0xd0, 0x40, 0x0c,
	0x73, 0xd3, 0xd9, 0x2b, 0xb2, 0x9b, 0x8e, 0xa7, 0x1c, 0xe9, 0x19, 0x47, 0x7a, 0xaf, 0x8d, 0x23,
	0xfd, 0xed, 0x9c, 0x74, 0xae, 0x38, 0x79, 0x94, 0x7c, 0x06, 0x7b, 0x53, 0x3a, 0x34, 0x0c, 0x33,
	0xe4, 0xdc, 0x5e, 0x95, 0x4d, 0x22, 0x15, 0xf8, 0x40, 0x65, 0xc8, 0x19, 0x1c, 0x4c, 0x31, 0xb8,
	0xc8, 0x90, 0xc6, 0x2c, 0x19, 0x0f, 0x45, 0x6a, 0xaf, 0x4b, 0xda, 0x7e, 0x85, 0x76, 0x65, 0xd2,
	0xaf, 0x53, 0x72, 0x06, 0xa0, 0xa8, 0x51, 0x1a, 0xdc, 0xd8, 0x6b, 0x0b, 0x4f, 0x6b, 0x49, 0x9d,
	0x1c, 0x4c, 0x7a, 0xb0, 0x39, 0x8a, 0x68, 0x70, 0x13, 0x31, 0x2e, 0x30, 0xb4, 0x3b, 0xbd, 0xd6,
	0xd1, 0x86, 0x5f, 0x0d, 0xb9, 0xa7, 0xf0, 0xce, 0x0f, 0x28, 0x7e, 0x46, 0xce, 0xe9, 0x18, 0xaf,
	0x04, 0x15, 0xb7, 0xd5, 0x56, 0xc7, 0x2a, 0x5e, 0xde, 0xba, 0xa5, 0x23, 0x17, 0xa1, 0xfb, 0x35,
	0x1c, 0x7e, 0x87, 0x11, 0x0a, 0xfc, 0x05, 0x93, 0x90, 0x25, 0x63, 0xad, 0xb1, 0xac, 0x53, 0xfe,
	0x6a, 0x81, 0xfd, 0xb0, 0xb2, 0xf6, 0xcb, 0xb7, 0xb0, 0x15, 0xe4, 0x73, 0xc8, 0xd2, 0x44, 0xf5,
	0xa8, 0xb5, 0xf0, 0xab, 0xbb, 0x86, 0x20, 0x1b, 0xf4, 0x39, 0x74, 0x32, 0xe4, 0xb7, 0x91, 0x9a,
	0xb9, 0x19, 0xbf, 0xe9, 0x9a, 0xbe, 0x04, 0xf8, 0x1a, 0xe8, 0x5e, 0xc3, 0xce, 0x95, 0x48, 0x33,
	0x7c, 0xc9, 0x22, 0x5c, 0x7e, 0x08, 0x73, 0x6b, 0x5e, 0xb3, 0x48, 0xe7, 0xdb, 0x32, 0xbf, 0x91,
	0x07, 0x64, 0x92, 0xc0, 0x6a, 0x48, 0x05, 0x95, 0x16, 0xeb, 0xfa, 0xf2, 0xb7, 0x7b, 0x0a, 0x07,
	0xe5, 0x88, 0xe8, 0x76, 0x17, 0x97, 0xd6, 0x64, 0x74, 0xf7, 0x57, 0x70, 0xea, 0x98, 0xc5, 0xb4,
	0x6f, 0x68, 0x73, 0x99, 0x21, 0xeb, 0xcd, 0x1d, 0x32, 0x4d, 0xf6, 0x0b, 0x86, 0xfb, 0x4f, 0x0b,
	0xb6, 0xa6, 0x72, 0x79, 0xff, 0x78, 0x7e, 0x90, 0x24, 0x4d, 0x02, 0xf5, 0xe5, 0x1d, 0xdf, 0xca,
	0x23, 0xaf, 0xf2, 0x00, 0x79, 0x0a, 0x6f, 0x65, 0x18, 0x20, 0xbb, 0xc3, 0x50, 0x43, 0xda, 0x12,
	0xb2, 0x65, 0xa2, 0x0a, 0x76, 0x0c, 0x3b, 0xe9, 0x48, 0xd6, 0x0e, 0x8b, 0x29, 0x59, 0x91, 0xb7,
	0xb4, 0x6d, 0xe2, 0x66, 0x44, 0x4e, 0xc1, 0x2a, 0x1e, 0x01, 0x39, 0x49, 0x0b, 0x6c, 0x5e, 0x80,
	0xdd, 0x2f, 0x60, 0xff, 0x85, 0xf1, 0xb4, 0xde, 0x22, 0x4b, 0xdc, 0xe7, 0xb3, 0xbf, 0xd7, 0x61,
	0x6d, 0x90, 0x3f, 0x53, 0xe4, 0x0d, 0x6c, 0xcf, 0xec, 0x7d, 0x72, 0x5c, 0x77, 0x79, 0xb5, 0x6f,
	0x83, 0x63, 0x57, 0xa1, 0xdf, 0xc7, 0x13, 0x71, 0xaf, 0x1d, 0xe6, 0x3e, 0x22, 0xf7, 0xb0, 0x57,
	0xb7, 0xa3, 0x89, 0x57, 0x23, 0xdf, 0xf0, 0x1c, 0x38, 0xfd, 0xa5, 0xf1, 0xca, 0x0e, 0xee, 0x23,
	0xf2, 0x3b, 0x6c, 0x56, 0x76, 0x31, 0x79, 0x3a, 0x47, 0x61, 0x7a, 0xc1, 0x3b, 0x1f, 0x2e, 0x82,
	0x15, 0xfa, 0xbc, 0xfa, 0x40, 0x18, 0x3b, 0x92, 0x4f, 0x1a, 0xf9, 0x33, 0x7e, 0x77, 0x3e, 0x5d,
	0x12, 0x5d, 0x14, 0x8d, 0x61, 0x67, 0x76, 0x6b, 0x90, 0x8f, 0x6a, 0x44, 0xe6, 0x2c, 0x35, 0xe7,
	0xe3, 0xa5, 0xb0, 0x45, 0xb9, 0xe7, 0xb0, 0x75, 0x91, 0x70, 0xcc, 0x0c, 0x80, 0x3c, 0xae, 0x59,
	0x24, 0x8d, 0x06, 0x08, 0xe1, 0xed, 0xda, 0x35, 0x49, 0xea, 0x3a, 0xda, 0xb4, 0x50, 0x1b, 0xab,
	0x5c, 0x82, 0x55, 0x2c, 0x2f, 0xf2, 0x41, 0x8d, 0xf2, 0xec, 0x6a, 0x6b, 0x54, 0x1b, 0x80, 0xf5,
	0x13, 0xe2, 0x64, 0x10, 0xb1, 0x3b, 0x24, 0x73, 0x81, 0x8d, 0x12, 0x6f, 0x60, 0x7b, 0x66, 0x24,
	0x6b, 0x27, 0xaa, 0x7e, 0x6c, 0x9b, 0x94, 0x47, 0x1d, 0xb9, 0x0b, 0x4e, 0xfe, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0x8c, 0x9b, 0xe1, 0xb5, 0x90, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// CreateBroadcast creates a FS broadcast, potentially sending a message to
	// many machines in the fleet.
	CreateBroadcast(ctx context.Context, in *CreateBroadcastRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error)
	// ListActiveBroadcasts lists the currently active FS broadcasts.
	ListActiveBroadcasts(ctx context.Context, in *ListActiveBroadcastsRequest, opts ...grpc.CallOption) (*ListActiveBroadcastsResponse, error)
	// ListClients lists the currently active FS clients.
	ListClients(ctx context.Context, in *ListClientsRequest, opts ...grpc.CallOption) (*ListClientsResponse, error)
	// ListClientContacts lists the contact history for a client.
	ListClientContacts(ctx context.Context, in *ListClientContactsRequest, opts ...grpc.CallOption) (*ListClientContactsResponse, error)
	// GetMessageStatus retrieves the current status of a message.
	GetMessageStatus(ctx context.Context, in *GetMessageStatusRequest, opts ...grpc.CallOption) (*GetMessageStatusResponse, error)
	// InsertMessage inserts a message into the Fleetspeak system to be processed
	// by the server or delivered to a client.
	// TODO: Have this method return the message that is written to the
	// datastore (or at least the id).
	InsertMessage(ctx context.Context, in *fleetspeak.Message, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error)
	// DeletePendingMessages clears message queues for given clients.
	DeletePendingMessages(ctx context.Context, in *DeletePendingMessagesRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error)
	// StoreFile inserts a file into the Fleetspeak system.
	StoreFile(ctx context.Context, in *StoreFileRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error)
	// KeepAlive does as little as possible.
	KeepAlive(ctx context.Context, in *fleetspeak.EmptyMessage, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error)
	// BlacklistClient marks a client_id as invalid, forcing all Fleetspeak
	// clients using it to rekey.
	BlacklistClient(ctx context.Context, in *BlacklistClientRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) CreateBroadcast(ctx context.Context, in *CreateBroadcastRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error) {
	out := new(fleetspeak.EmptyMessage)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/CreateBroadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) ListActiveBroadcasts(ctx context.Context, in *ListActiveBroadcastsRequest, opts ...grpc.CallOption) (*ListActiveBroadcastsResponse, error) {
	out := new(ListActiveBroadcastsResponse)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/ListActiveBroadcasts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) ListClients(ctx context.Context, in *ListClientsRequest, opts ...grpc.CallOption) (*ListClientsResponse, error) {
	out := new(ListClientsResponse)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/ListClients", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) ListClientContacts(ctx context.Context, in *ListClientContactsRequest, opts ...grpc.CallOption) (*ListClientContactsResponse, error) {
	out := new(ListClientContactsResponse)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/ListClientContacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetMessageStatus(ctx context.Context, in *GetMessageStatusRequest, opts ...grpc.CallOption) (*GetMessageStatusResponse, error) {
	out := new(GetMessageStatusResponse)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/GetMessageStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) InsertMessage(ctx context.Context, in *fleetspeak.Message, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error) {
	out := new(fleetspeak.EmptyMessage)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/InsertMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) DeletePendingMessages(ctx context.Context, in *DeletePendingMessagesRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error) {
	out := new(fleetspeak.EmptyMessage)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/DeletePendingMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) StoreFile(ctx context.Context, in *StoreFileRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error) {
	out := new(fleetspeak.EmptyMessage)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/StoreFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) KeepAlive(ctx context.Context, in *fleetspeak.EmptyMessage, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error) {
	out := new(fleetspeak.EmptyMessage)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) BlacklistClient(ctx context.Context, in *BlacklistClientRequest, opts ...grpc.CallOption) (*fleetspeak.EmptyMessage, error) {
	out := new(fleetspeak.EmptyMessage)
	err := c.cc.Invoke(ctx, "/fleetspeak.server.Admin/BlacklistClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// CreateBroadcast creates a FS broadcast, potentially sending a message to
	// many machines in the fleet.
	CreateBroadcast(context.Context, *CreateBroadcastRequest) (*fleetspeak.EmptyMessage, error)
	// ListActiveBroadcasts lists the currently active FS broadcasts.
	ListActiveBroadcasts(context.Context, *ListActiveBroadcastsRequest) (*ListActiveBroadcastsResponse, error)
	// ListClients lists the currently active FS clients.
	ListClients(context.Context, *ListClientsRequest) (*ListClientsResponse, error)
	// ListClientContacts lists the contact history for a client.
	ListClientContacts(context.Context, *ListClientContactsRequest) (*ListClientContactsResponse, error)
	// GetMessageStatus retrieves the current status of a message.
	GetMessageStatus(context.Context, *GetMessageStatusRequest) (*GetMessageStatusResponse, error)
	// InsertMessage inserts a message into the Fleetspeak system to be processed
	// by the server or delivered to a client.
	// TODO: Have this method return the message that is written to the
	// datastore (or at least the id).
	InsertMessage(context.Context, *fleetspeak.Message) (*fleetspeak.EmptyMessage, error)
	// DeletePendingMessages clears message queues for given clients.
	DeletePendingMessages(context.Context, *DeletePendingMessagesRequest) (*fleetspeak.EmptyMessage, error)
	// StoreFile inserts a file into the Fleetspeak system.
	StoreFile(context.Context, *StoreFileRequest) (*fleetspeak.EmptyMessage, error)
	// KeepAlive does as little as possible.
	KeepAlive(context.Context, *fleetspeak.EmptyMessage) (*fleetspeak.EmptyMessage, error)
	// BlacklistClient marks a client_id as invalid, forcing all Fleetspeak
	// clients using it to rekey.
	BlacklistClient(context.Context, *BlacklistClientRequest) (*fleetspeak.EmptyMessage, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) CreateBroadcast(ctx context.Context, req *CreateBroadcastRequest) (*fleetspeak.EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBroadcast not implemented")
}
func (*UnimplementedAdminServer) ListActiveBroadcasts(ctx context.Context, req *ListActiveBroadcastsRequest) (*ListActiveBroadcastsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListActiveBroadcasts not implemented")
}
func (*UnimplementedAdminServer) ListClients(ctx context.Context, req *ListClientsRequest) (*ListClientsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClients not implemented")
}
func (*UnimplementedAdminServer) ListClientContacts(ctx context.Context, req *ListClientContactsRequest) (*ListClientContactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClientContacts not implemented")
}
func (*UnimplementedAdminServer) GetMessageStatus(ctx context.Context, req *GetMessageStatusRequest) (*GetMessageStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessageStatus not implemented")
}
func (*UnimplementedAdminServer) InsertMessage(ctx context.Context, req *fleetspeak.Message) (*fleetspeak.EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertMessage not implemented")
}
func (*UnimplementedAdminServer) DeletePendingMessages(ctx context.Context, req *DeletePendingMessagesRequest) (*fleetspeak.EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePendingMessages not implemented")
}
func (*UnimplementedAdminServer) StoreFile(ctx context.Context, req *StoreFileRequest) (*fleetspeak.EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreFile not implemented")
}
func (*UnimplementedAdminServer) KeepAlive(ctx context.Context, req *fleetspeak.EmptyMessage) (*fleetspeak.EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedAdminServer) BlacklistClient(ctx context.Context, req *BlacklistClientRequest) (*fleetspeak.EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlacklistClient not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_CreateBroadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBroadcastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).CreateBroadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/CreateBroadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).CreateBroadcast(ctx, req.(*CreateBroadcastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_ListActiveBroadcasts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListActiveBroadcastsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ListActiveBroadcasts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/ListActiveBroadcasts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ListActiveBroadcasts(ctx, req.(*ListActiveBroadcastsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_ListClients_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClientsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ListClients(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/ListClients",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ListClients(ctx, req.(*ListClientsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_ListClientContacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClientContactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ListClientContacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/ListClientContacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ListClientContacts(ctx, req.(*ListClientContactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetMessageStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessageStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetMessageStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/GetMessageStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetMessageStatus(ctx, req.(*GetMessageStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_InsertMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fleetspeak.Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).InsertMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/InsertMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).InsertMessage(ctx, req.(*fleetspeak.Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_DeletePendingMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePendingMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).DeletePendingMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/DeletePendingMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).DeletePendingMessages(ctx, req.(*DeletePendingMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_StoreFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).StoreFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/StoreFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).StoreFile(ctx, req.(*StoreFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fleetspeak.EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).KeepAlive(ctx, req.(*fleetspeak.EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_BlacklistClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlacklistClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).BlacklistClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fleetspeak.server.Admin/BlacklistClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).BlacklistClient(ctx, req.(*BlacklistClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fleetspeak.server.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBroadcast",
			Handler:    _Admin_CreateBroadcast_Handler,
		},
		{
			MethodName: "ListActiveBroadcasts",
			Handler:    _Admin_ListActiveBroadcasts_Handler,
		},
		{
			MethodName: "ListClients",
			Handler:    _Admin_ListClients_Handler,
		},
		{
			MethodName: "ListClientContacts",
			Handler:    _Admin_ListClientContacts_Handler,
		},
		{
			MethodName: "GetMessageStatus",
			Handler:    _Admin_GetMessageStatus_Handler,
		},
		{
			MethodName: "InsertMessage",
			Handler:    _Admin_InsertMessage_Handler,
		},
		{
			MethodName: "DeletePendingMessages",
			Handler:    _Admin_DeletePendingMessages_Handler,
		},
		{
			MethodName: "StoreFile",
			Handler:    _Admin_StoreFile_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _Admin_KeepAlive_Handler,
		},
		{
			MethodName: "BlacklistClient",
			Handler:    _Admin_BlacklistClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fleetspeak/src/server/proto/fleetspeak_server/admin.proto",
}
