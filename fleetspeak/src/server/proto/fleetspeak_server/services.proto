syntax = "proto3";

package fleetspeak.server;

import "google/protobuf/any.proto";

option go_package = "github.com/google/fleetspeak/fleetspeak/src/server/proto/fleetspeak_server";

// A ServiceConfig describes how the server should configure a 'service', which
// is a module that sends and processes messages.
message ServiceConfig {
  // The name that the service will be known as. Primary use is to address
  // messages to the service. The service names 'server' and 'client' are
  // reserved.
  string name = 1;

  // The name of the factory which will be used to generate the service.
  string factory = 2;

  // The maximum number of simultaneous calls to the service's ProcessMessage
  // method. If unset, defaults to 100.
  uint32 max_parallelism = 3;

  // Additional configuration information for the factory to use when setting up
  // the service. The allowed type depends upon the factory.
  google.protobuf.Any config = 4;
}

// TODO(b/371158380): Does it make sense to have this a separate message?
//
// Most of the fields are the same as in `ServiceConfig` (except for the
// `max_parallelism` field) but experience shows that these can diverge more in
// the future and then we will have problems.
message BatchedServiceConfig {
  // Name that the service will be registered under.
  //
  // This is used by endpoints to uniquely identify the service to send messages
  // to using the `service_name` field of `fleetspeak.Address` message.
  string name = 1;

  // Name of the factory which will be used to instantiate the service.
  //
  // List of available factories (and their names) is specific to a particular
  // deployment and is defined during system startup.
  string factory = 2;

  // Configuration specific to the chosen service factory.
  google.protobuf.Any config = 3;
}
