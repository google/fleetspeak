// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/client/proto/fleetspeak_client/client.proto

package fleetspeak_client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Parameters used to configure communicator plugins.
type CommunicatorConfig struct {
	// The longest possible wait before attempting to contact the server.  The
	// communicator may poll sooner if there are messages for the server, of it
	// there has been recent communication with the server.
	//
	// A default of 5 minutes is used if unset.
	MaxPollDelaySeconds int32 `protobuf:"varint,2,opt,name=max_poll_delay_seconds,json=maxPollDelaySeconds,proto3" json:"max_poll_delay_seconds,omitempty"`
	// The longest possible wait before attempting to contact the server when
	// there is some data to transmit. The communicator may poll sooner if the
	// buffer is full.
	//
	// A default of 5 seconds is used if unset.
	MaxBufferDelaySeconds int32 `protobuf:"varint,3,opt,name=max_buffer_delay_seconds,json=maxBufferDelaySeconds,proto3" json:"max_buffer_delay_seconds,omitempty"`
	// The minimum time to wait after a failure to reach any server.
	//
	// A default of 5 minutes is used if unset.
	MinFailureDelaySeconds int32 `protobuf:"varint,4,opt,name=min_failure_delay_seconds,json=minFailureDelaySeconds,proto3" json:"min_failure_delay_seconds,omitempty"`
	// If the communicator is unable to communicate with the server for this long,
	// it should kill fleetspeak, in the hope that a restart will fix things.
	//
	// A default of 7 days is used if unset.
	FailureSuicideTimeSeconds int32    `protobuf:"varint,5,opt,name=failure_suicide_time_seconds,json=failureSuicideTimeSeconds,proto3" json:"failure_suicide_time_seconds,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CommunicatorConfig) Reset()         { *m = CommunicatorConfig{} }
func (m *CommunicatorConfig) String() string { return proto.CompactTextString(m) }
func (*CommunicatorConfig) ProtoMessage()    {}
func (*CommunicatorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_341421432342fac9, []int{0}
}
func (m *CommunicatorConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunicatorConfig.Unmarshal(m, b)
}
func (m *CommunicatorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunicatorConfig.Marshal(b, m, deterministic)
}
func (dst *CommunicatorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunicatorConfig.Merge(dst, src)
}
func (m *CommunicatorConfig) XXX_Size() int {
	return xxx_messageInfo_CommunicatorConfig.Size(m)
}
func (m *CommunicatorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunicatorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CommunicatorConfig proto.InternalMessageInfo

func (m *CommunicatorConfig) GetMaxPollDelaySeconds() int32 {
	if m != nil {
		return m.MaxPollDelaySeconds
	}
	return 0
}

func (m *CommunicatorConfig) GetMaxBufferDelaySeconds() int32 {
	if m != nil {
		return m.MaxBufferDelaySeconds
	}
	return 0
}

func (m *CommunicatorConfig) GetMinFailureDelaySeconds() int32 {
	if m != nil {
		return m.MinFailureDelaySeconds
	}
	return 0
}

func (m *CommunicatorConfig) GetFailureSuicideTimeSeconds() int32 {
	if m != nil {
		return m.FailureSuicideTimeSeconds
	}
	return 0
}

// ClientState contains the state of the client which should be persisted across
// restarts.
type ClientState struct {
	// The client key, normally fixed after first execution. Also defines the
	// client's id.
	ClientKey []byte `protobuf:"bytes,1,opt,name=client_key,json=clientKey,proto3" json:"client_key,omitempty"`
	// The most recent sequencing nonce received from the server.
	SequencingNonce uint64 `protobuf:"varint,7,opt,name=sequencing_nonce,json=sequencingNonce,proto3" json:"sequencing_nonce,omitempty"`
	// A set of revoked/blacklisted certificate serial numbers in big endian
	// format. Not restricted, but normally at most 20 bytes. (RFC 3280)
	RevokedCertSerials   [][]byte `protobuf:"bytes,8,rep,name=revoked_cert_serials,json=revokedCertSerials,proto3" json:"revoked_cert_serials,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientState) Reset()         { *m = ClientState{} }
func (m *ClientState) String() string { return proto.CompactTextString(m) }
func (*ClientState) ProtoMessage()    {}
func (*ClientState) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_341421432342fac9, []int{1}
}
func (m *ClientState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientState.Unmarshal(m, b)
}
func (m *ClientState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientState.Marshal(b, m, deterministic)
}
func (dst *ClientState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientState.Merge(dst, src)
}
func (m *ClientState) XXX_Size() int {
	return xxx_messageInfo_ClientState.Size(m)
}
func (m *ClientState) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientState.DiscardUnknown(m)
}

var xxx_messageInfo_ClientState proto.InternalMessageInfo

func (m *ClientState) GetClientKey() []byte {
	if m != nil {
		return m.ClientKey
	}
	return nil
}

func (m *ClientState) GetSequencingNonce() uint64 {
	if m != nil {
		return m.SequencingNonce
	}
	return 0
}

func (m *ClientState) GetRevokedCertSerials() [][]byte {
	if m != nil {
		return m.RevokedCertSerials
	}
	return nil
}

func init() {
	proto.RegisterType((*CommunicatorConfig)(nil), "fleetspeak.client.CommunicatorConfig")
	proto.RegisterType((*ClientState)(nil), "fleetspeak.client.ClientState")
}

func init() {
	proto.RegisterFile("fleetspeak/src/client/proto/fleetspeak_client/client.proto", fileDescriptor_client_341421432342fac9)
}

var fileDescriptor_client_341421432342fac9 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0xa9, 0xdb, 0xfc, 0x11, 0x07, 0x6a, 0xd4, 0xd1, 0x81, 0x42, 0xd9, 0xa9, 0x5e, 0x56,
	0x61, 0x07, 0xd1, 0x8b, 0x60, 0xc5, 0x8b, 0x20, 0xd2, 0x7a, 0x0f, 0x59, 0xfa, 0x3a, 0xc2, 0xf2,
	0x63, 0x26, 0xa9, 0x6c, 0x7f, 0x82, 0xff, 0xb4, 0xc8, 0x92, 0xea, 0xd8, 0x4e, 0x81, 0xef, 0x7b,
	0x5f, 0x0e, 0xef, 0xa1, 0x87, 0x5a, 0x00, 0x38, 0xbb, 0x00, 0x3a, 0xcf, 0xac, 0x61, 0x19, 0x13,
	0x1c, 0x94, 0xcb, 0x16, 0x46, 0x3b, 0x9d, 0x6d, 0x1c, 0x69, 0x79, 0x78, 0xc6, 0x5e, 0xe3, 0xb3,
	0x8d, 0x1f, 0x07, 0x31, 0xfa, 0x89, 0x10, 0xce, 0xb5, 0x94, 0x8d, 0xe2, 0x8c, 0x3a, 0x6d, 0x72,
	0xad, 0x6a, 0x3e, 0xc3, 0x13, 0x34, 0x90, 0x74, 0x49, 0x16, 0x5a, 0x08, 0x52, 0x81, 0xa0, 0x2b,
	0x62, 0x81, 0x69, 0x55, 0xd9, 0x78, 0x2f, 0x89, 0xd2, 0x5e, 0x71, 0x2e, 0xe9, 0xf2, 0x5d, 0x0b,
	0xf1, 0xbc, 0x76, 0x65, 0x50, 0xf8, 0x0e, 0xc5, 0xeb, 0x68, 0xda, 0xd4, 0x35, 0x98, 0x9d, 0xac,
	0xe3, 0xb3, 0x4b, 0x49, 0x97, 0x4f, 0x5e, 0x6f, 0x85, 0xf7, 0x68, 0x28, 0xb9, 0x22, 0x35, 0xe5,
	0xa2, 0x31, 0xb0, 0x53, 0x76, 0x7d, 0x39, 0x90, 0x5c, 0xbd, 0x04, 0xbf, 0x95, 0x3e, 0xa2, 0xab,
	0xbf, 0xcc, 0x36, 0x9c, 0xf1, 0x0a, 0x88, 0xe3, 0x12, 0xfe, 0xeb, 0x9e, 0xaf, 0x87, 0xed, 0x4c,
	0x19, 0x46, 0x3e, 0xb8, 0x84, 0xf6, 0x83, 0xd1, 0x77, 0x84, 0x8e, 0x73, 0xbf, 0x8b, 0xd2, 0x51,
	0x07, 0xf8, 0x1a, 0xa1, 0xb0, 0x1a, 0x32, 0x87, 0x55, 0x1c, 0x25, 0x51, 0xda, 0x2f, 0x8e, 0x02,
	0x79, 0x85, 0x15, 0xbe, 0x41, 0xa7, 0x16, 0x3e, 0x1b, 0x50, 0x8c, 0xab, 0x19, 0x51, 0x5a, 0x31,
	0x88, 0x0f, 0x92, 0x28, 0xed, 0x16, 0x27, 0x1b, 0xfe, 0xb6, 0xc6, 0xf8, 0x16, 0x5d, 0x18, 0xf8,
	0xd2, 0x73, 0xa8, 0x08, 0x03, 0xe3, 0x88, 0x05, 0xc3, 0xa9, 0xb0, 0xf1, 0x61, 0xd2, 0x49, 0xfb,
	0x05, 0x6e, 0x5d, 0x0e, 0xc6, 0x95, 0xc1, 0x4c, 0xf7, 0xfd, 0x99, 0x26, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x5c, 0x7c, 0xd1, 0x18, 0xe4, 0x01, 0x00, 0x00,
}
