// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/client/socketservice/proto/fleetspeak_socketservice/config.proto

package fleetspeak_socketservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The configuration information expected by socketservice.Factory in
// ClientServiceConfig.config.
type Config struct {
	// The given api_proxy_path may be an arbitrary filesystem path and will be
	// used to pair the daemon service with its non-child client process.
	//
	// On Unix in particular, a Unix socket will be created at this path and used
	// for communication between FS and the client.
	//
	// Side note: FS requires the proxy's parent directory's perms to be 0700.
	// If the parent directory doesn't exist, FS will mkdir -p it with perms set
	// to 0700.
	ApiProxyPath string `protobuf:"bytes,1,opt,name=api_proxy_path,json=apiProxyPath,proto3" json:"api_proxy_path,omitempty"`
	// By default, socket services report resource usage every 10 minutes. This
	// flag disables this if set.
	DisableResourceMonitoring bool `protobuf:"varint,2,opt,name=disable_resource_monitoring,json=disableResourceMonitoring,proto3" json:"disable_resource_monitoring,omitempty"`
	// How many samples to aggregate into a report when monitoring resource usage.
	// If unset, defaults to 20.
	ResourceMonitoringSampleSize int32 `protobuf:"varint,3,opt,name=resource_monitoring_sample_size,json=resourceMonitoringSampleSize,proto3" json:"resource_monitoring_sample_size,omitempty"`
	// How long to wait between resource monitoring samples. If unset, defaults to
	// 30 seconds.
	ResourceMonitoringSamplePeriodSeconds int32    `protobuf:"varint,4,opt,name=resource_monitoring_sample_period_seconds,json=resourceMonitoringSamplePeriodSeconds,proto3" json:"resource_monitoring_sample_period_seconds,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{} `json:"-"`
	XXX_unrecognized                      []byte   `json:"-"`
	XXX_sizecache                         int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_e9fd251f6e98c587, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetApiProxyPath() string {
	if m != nil {
		return m.ApiProxyPath
	}
	return ""
}

func (m *Config) GetDisableResourceMonitoring() bool {
	if m != nil {
		return m.DisableResourceMonitoring
	}
	return false
}

func (m *Config) GetResourceMonitoringSampleSize() int32 {
	if m != nil {
		return m.ResourceMonitoringSampleSize
	}
	return 0
}

func (m *Config) GetResourceMonitoringSamplePeriodSeconds() int32 {
	if m != nil {
		return m.ResourceMonitoringSamplePeriodSeconds
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "fleetspeak.socketservice.Config")
}

func init() {
	proto.RegisterFile("fleetspeak/src/client/socketservice/proto/fleetspeak_socketservice/config.proto", fileDescriptor_config_e9fd251f6e98c587)
}

var fileDescriptor_config_e9fd251f6e98c587 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd0, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0xc7, 0x71, 0xae, 0x6a, 0xd1, 0x20, 0x0e, 0x99, 0x22, 0x0a, 0x1e, 0xa2, 0x70, 0x2e, 0xcd,
	0xe0, 0xee, 0x22, 0x8e, 0xe2, 0x71, 0xb7, 0xb8, 0x85, 0x34, 0xf7, 0xda, 0x3e, 0x7a, 0xcd, 0x0b,
	0x79, 0x51, 0xb4, 0xff, 0x84, 0xff, 0xb2, 0x18, 0x8b, 0xe5, 0x50, 0xbb, 0x26, 0x9f, 0xdf, 0x77,
	0x78, 0xe2, 0x69, 0xd6, 0x03, 0x24, 0x0e, 0x60, 0x97, 0x9a, 0xa3, 0xd3, 0xae, 0x47, 0xf0, 0x49,
	0x33, 0xb9, 0x25, 0x24, 0x86, 0xf8, 0x8a, 0x0e, 0x74, 0x88, 0x94, 0x48, 0x6f, 0xa5, 0x19, 0x7e,
	0x3b, 0xf2, 0x33, 0x9c, 0x4f, 0xb2, 0x92, 0x6a, 0xcb, 0x26, 0x03, 0x76, 0xf9, 0x31, 0x12, 0xe3,
	0xfb, 0x4c, 0xe5, 0x95, 0x38, 0xb1, 0x01, 0x4d, 0x88, 0xf4, 0xf6, 0x6e, 0x82, 0x4d, 0x0b, 0x55,
	0x94, 0x45, 0x75, 0xd4, 0x1c, 0xdb, 0x80, 0xf5, 0xd7, 0x63, 0x6d, 0xd3, 0x42, 0xde, 0x89, 0xb3,
	0x0e, 0xd9, 0x4e, 0x7b, 0x30, 0x11, 0x98, 0x5e, 0xa2, 0x03, 0xb3, 0x22, 0x8f, 0x89, 0x22, 0xfa,
	0xb9, 0x1a, 0x95, 0x45, 0x75, 0xd8, 0x9c, 0x6e, 0x48, 0xb3, 0x11, 0x8f, 0x3f, 0x40, 0x3e, 0x88,
	0x8b, 0x3f, 0x76, 0x86, 0xed, 0x2a, 0xf4, 0x60, 0x18, 0xd7, 0xa0, 0xf6, 0xca, 0xa2, 0x3a, 0x68,
	0xce, 0xe3, 0xaf, 0x71, 0x9b, 0x51, 0x8b, 0x6b, 0x90, 0xcf, 0xe2, 0x66, 0x47, 0x26, 0x40, 0x44,
	0xea, 0x0c, 0x83, 0x23, 0xdf, 0xb1, 0xda, 0xcf, 0xc1, 0xeb, 0xff, 0x82, 0x75, 0xd6, 0xed, 0x37,
	0x9e, 0x8e, 0xf3, 0xc9, 0x6e, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x02, 0x76, 0x36, 0x99, 0x85,
	0x01, 0x00, 0x00,
}
