syntax = "proto3";

package fleetspeak.client.generic;

option go_package = "github.com/google/fleetspeak/fleetspeak/src/client/generic/proto/fleetspeak_client_generic";

message Config {
  // One or more PEM encoded certificates that the client should trust,
  // typically a CA certificate specific to the installation.
  string trusted_certs = 1;

  // The servers that the client should attempt to connect to in <host>:<port>
  // format. E.g. "lazy.com:443", "10.0.0.5:1234"
  repeated string server = 2;

  // The client labels that this client should present to the server. Labels
  // indicating the client architecture and OS are automatically included.
  repeated string client_label = 3;

  oneof persistence_handler {
    FilesystemHandler filesystem_handler = 4;
    RegistryHandler registry_handler = 5;
  }

  // If set, the client will use long running persistent connections, otherwise
  // it will make regular short lived polls to the server. Recommended.
  bool streaming = 6;

  // If provided, proxy used for connecting to the server.
  // The format is a URL.
  // See https://golang.org/pkg/net/http/#Transport.Proxy for details.
  string proxy = 7;
}

message FilesystemHandler {
  // Where to persist client state, see NewFilesystemPersistenceHandler for
  // details:
  //
  // https://godoc.org/github.com/google/fleetspeak/fleetspeak/src/client/config#FilesystemPersistenceHandler
  string configuration_directory = 1;
  string state_file = 2;
}

message RegistryHandler {
  // Where to persist client state, see NewWindowsRegistryPersistenceHandler
  // for details:
  //
  // https://github.com/google/fleetspeak/blob/master/fleetspeak/src/client/config/windows_registry_persistence_handler.go
  string configuration_key = 1;
}
