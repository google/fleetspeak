// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fleetspeak/src/common/proto/fleetspeak/common.proto

package fleetspeak

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The message priority. The primary effect is on the ordering of messages
// sent from the client to the server.
type Message_Priority int32

const (
	Message_MEDIUM Message_Priority = 0
	Message_LOW    Message_Priority = 1
	Message_HIGH   Message_Priority = 2
)

var Message_Priority_name = map[int32]string{
	0: "MEDIUM",
	1: "LOW",
	2: "HIGH",
}

var Message_Priority_value = map[string]int32{
	"MEDIUM": 0,
	"LOW":    1,
	"HIGH":   2,
}

func (x Message_Priority) String() string {
	return proto.EnumName(Message_Priority_name, int32(x))
}

func (Message_Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{2, 0}
}

// An Address identifies the source or destination of a message.
type Address struct {
	// The client_id, if the address refers to a service on a client. If unset,
	// the address refers to a service on the server.
	ClientId []byte `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The name of the fleetspeak service which sent or should receive the
	// message.  Required.
	ServiceName          string   `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *Address) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type ValidationInfo struct {
	Tags                 map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ValidationInfo) Reset()         { *m = ValidationInfo{} }
func (m *ValidationInfo) String() string { return proto.CompactTextString(m) }
func (*ValidationInfo) ProtoMessage()    {}
func (*ValidationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{1}
}

func (m *ValidationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationInfo.Unmarshal(m, b)
}
func (m *ValidationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationInfo.Marshal(b, m, deterministic)
}
func (m *ValidationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationInfo.Merge(m, src)
}
func (m *ValidationInfo) XXX_Size() int {
	return xxx_messageInfo_ValidationInfo.Size(m)
}
func (m *ValidationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationInfo proto.InternalMessageInfo

func (m *ValidationInfo) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Message struct {
	// A hash based on origin and origin_message_id. It is set by the fleetspeak
	// system on message intake and may be used for deduplication.
	MessageId []byte `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// The source of the messages. Required.
	Source *Address `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// An sequence of bytes set by the source in a way to uniquely identify the
	// message among all messages with the same origin.
	SourceMessageId []byte `protobuf:"bytes,3,opt,name=source_message_id,json=sourceMessageId,proto3" json:"source_message_id,omitempty"`
	// The destination of the message. Required.
	Destination *Address `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	// The type of message. This field is mostly opaque to the Fleetspeak system,
	// but can be used for some statistics gathering. It is recommended that each
	// service define a static collection of short readable message types and
	// dispatch according to this when processing messages. e.g. "ResourceUsage",
	// "StdOutputData".
	MessageType string `protobuf:"bytes,5,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// Set when the message enters the FS system.
	CreationTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	// The data associated with this request, accepted types are determined by the
	// service and may depend on message_type. Not typically stored after the
	// message is processed.
	Data *any.Any `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	// Additional validation information, set by on the server by the (optional)
	// authorizer component based on WrappedContactData.validators, etc.
	ValidationInfo *ValidationInfo `protobuf:"bytes,8,opt,name=validation_info,json=validationInfo,proto3" json:"validation_info,omitempty"`
	// The result of processing the message. Set once processing has finished.
	Result   *MessageResult   `protobuf:"bytes,9,opt,name=result,proto3" json:"result,omitempty"`
	Priority Message_Priority `protobuf:"varint,10,opt,name=priority,proto3,enum=fleetspeak.Message_Priority" json:"priority,omitempty"`
	// A background message does not count as activity when deciding how fast to
	// poll the server. This flag should be set on messages which are unlikely to
	// trigger additional activity.
	Background bool `protobuf:"varint,11,opt,name=background,proto3" json:"background,omitempty"`
	// Optional debugging information provided by the originator of the
	// message. Fleetspeak stores this information along with the message for
	// later retrieval, but doesn't really do anything else with it.
	Annotations          *Annotations `protobuf:"bytes,12,opt,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{2}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessageId() []byte {
	if m != nil {
		return m.MessageId
	}
	return nil
}

func (m *Message) GetSource() *Address {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Message) GetSourceMessageId() []byte {
	if m != nil {
		return m.SourceMessageId
	}
	return nil
}

func (m *Message) GetDestination() *Address {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *Message) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *Message) GetCreationTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreationTime
	}
	return nil
}

func (m *Message) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Message) GetValidationInfo() *ValidationInfo {
	if m != nil {
		return m.ValidationInfo
	}
	return nil
}

func (m *Message) GetResult() *MessageResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Message) GetPriority() Message_Priority {
	if m != nil {
		return m.Priority
	}
	return Message_MEDIUM
}

func (m *Message) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *Message) GetAnnotations() *Annotations {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type MessageResult struct {
	// The time that processing finished.
	ProcessedTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=processed_time,json=processedTime,proto3" json:"processed_time,omitempty"`
	// Set when processing ended with a permanent failure.
	Failed bool `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	// A human readable error message, normally set when failed is true.
	FailedReason         string   `protobuf:"bytes,4,opt,name=failed_reason,json=failedReason,proto3" json:"failed_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageResult) Reset()         { *m = MessageResult{} }
func (m *MessageResult) String() string { return proto.CompactTextString(m) }
func (*MessageResult) ProtoMessage()    {}
func (*MessageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{3}
}

func (m *MessageResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResult.Unmarshal(m, b)
}
func (m *MessageResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResult.Marshal(b, m, deterministic)
}
func (m *MessageResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResult.Merge(m, src)
}
func (m *MessageResult) XXX_Size() int {
	return xxx_messageInfo_MessageResult.Size(m)
}
func (m *MessageResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResult.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResult proto.InternalMessageInfo

func (m *MessageResult) GetProcessedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ProcessedTime
	}
	return nil
}

func (m *MessageResult) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *MessageResult) GetFailedReason() string {
	if m != nil {
		return m.FailedReason
	}
	return ""
}

type Annotations struct {
	Entries              []*Annotations_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Annotations) Reset()         { *m = Annotations{} }
func (m *Annotations) String() string { return proto.CompactTextString(m) }
func (*Annotations) ProtoMessage()    {}
func (*Annotations) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{4}
}

func (m *Annotations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotations.Unmarshal(m, b)
}
func (m *Annotations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotations.Marshal(b, m, deterministic)
}
func (m *Annotations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotations.Merge(m, src)
}
func (m *Annotations) XXX_Size() int {
	return xxx_messageInfo_Annotations.Size(m)
}
func (m *Annotations) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotations.DiscardUnknown(m)
}

var xxx_messageInfo_Annotations proto.InternalMessageInfo

func (m *Annotations) GetEntries() []*Annotations_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Annotations_Entry struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Annotations_Entry) Reset()         { *m = Annotations_Entry{} }
func (m *Annotations_Entry) String() string { return proto.CompactTextString(m) }
func (*Annotations_Entry) ProtoMessage()    {}
func (*Annotations_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{4, 0}
}

func (m *Annotations_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Annotations_Entry.Unmarshal(m, b)
}
func (m *Annotations_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Annotations_Entry.Marshal(b, m, deterministic)
}
func (m *Annotations_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Annotations_Entry.Merge(m, src)
}
func (m *Annotations_Entry) XXX_Size() int {
	return xxx_messageInfo_Annotations_Entry.Size(m)
}
func (m *Annotations_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Annotations_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Annotations_Entry proto.InternalMessageInfo

func (m *Annotations_Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Annotations_Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// A Label is a tag assigned to a client by a plugin. Primary use is to limit
// broadcasts to specific clients.
type Label struct {
	// The service which set this label.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// A free form tag choosen by the setting plugin.
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}
func (*Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{5}
}

func (m *Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Label.Unmarshal(m, b)
}
func (m *Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Label.Marshal(b, m, deterministic)
}
func (m *Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Label.Merge(m, src)
}
func (m *Label) XXX_Size() int {
	return xxx_messageInfo_Label.Size(m)
}
func (m *Label) XXX_DiscardUnknown() {
	xxx_messageInfo_Label.DiscardUnknown(m)
}

var xxx_messageInfo_Label proto.InternalMessageInfo

func (m *Label) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Label) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type Signature struct {
	// A chain of ASN.1 DER encoded x509 certificates.
	Certificate [][]byte `protobuf:"bytes,1,rep,name=certificate,proto3" json:"certificate,omitempty"`
	// Indicates the choice of signature algorithm, a constant from
	// https://golang.org/pkg/crypto/x509/#SignatureAlgorithm
	Algorithm int32 `protobuf:"varint,2,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	// A signature of the validated data, it should be consistent with both the
	// algorithm choice and the first element of the certificate chain.
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{6}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetCertificate() [][]byte {
	if m != nil {
		return m.Certificate
	}
	return nil
}

func (m *Signature) GetAlgorithm() int32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// A WrappedContactData is provided by the client to the server with every
// contact.
type WrappedContactData struct {
	ContactData []byte       `protobuf:"bytes,1,opt,name=contact_data,json=contactData,proto3" json:"contact_data,omitempty"`
	Signatures  []*Signature `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	// contact_data.
	ClientLabels         []string `protobuf:"bytes,3,rep,name=client_labels,json=clientLabels,proto3" json:"client_labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WrappedContactData) Reset()         { *m = WrappedContactData{} }
func (m *WrappedContactData) String() string { return proto.CompactTextString(m) }
func (*WrappedContactData) ProtoMessage()    {}
func (*WrappedContactData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{7}
}

func (m *WrappedContactData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WrappedContactData.Unmarshal(m, b)
}
func (m *WrappedContactData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WrappedContactData.Marshal(b, m, deterministic)
}
func (m *WrappedContactData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WrappedContactData.Merge(m, src)
}
func (m *WrappedContactData) XXX_Size() int {
	return xxx_messageInfo_WrappedContactData.Size(m)
}
func (m *WrappedContactData) XXX_DiscardUnknown() {
	xxx_messageInfo_WrappedContactData.DiscardUnknown(m)
}

var xxx_messageInfo_WrappedContactData proto.InternalMessageInfo

func (m *WrappedContactData) GetContactData() []byte {
	if m != nil {
		return m.ContactData
	}
	return nil
}

func (m *WrappedContactData) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *WrappedContactData) GetClientLabels() []string {
	if m != nil {
		return m.ClientLabels
	}
	return nil
}

// On every contact, the client and server exchange ContactData messages.
type ContactData struct {
	// During every contact, the server passes a random sequencing_nonce to the
	// client, and the client provides the sequencing_nonce to the server during
	// the next contact.
	SequencingNonce uint64     `protobuf:"varint,1,opt,name=sequencing_nonce,json=sequencingNonce,proto3" json:"sequencing_nonce,omitempty"`
	Messages        []*Message `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	// Records the client's current time setting, as of the creation of this
	// ContactData. Only set by the client.
	ClientClock *timestamp.Timestamp `protobuf:"bytes,3,opt,name=client_clock,json=clientClock,proto3" json:"client_clock,omitempty"`
	// If set, acknowledges receipt of a streamed WrappedContactData. This is used
	// for control purposes during streaming connections.
	AckIndex uint64 `protobuf:"varint,4,opt,name=ack_index,json=ackIndex,proto3" json:"ack_index,omitempty"`
	// If set, indicates that the connection is shutting down and no more data
	// will be sent.
	DoneSending bool `protobuf:"varint,5,opt,name=done_sending,json=doneSending,proto3" json:"done_sending,omitempty"`
	// Set by the client to indicate how many messages it is willing to accept for
	// each installed service. After the first exchange of an streaming connection, it
	// represents the number of additional messages that will be accepted.
	AllowedMessages      map[string]uint64 `protobuf:"bytes,6,rep,name=AllowedMessages,proto3" json:"AllowedMessages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContactData) Reset()         { *m = ContactData{} }
func (m *ContactData) String() string { return proto.CompactTextString(m) }
func (*ContactData) ProtoMessage()    {}
func (*ContactData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{8}
}

func (m *ContactData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContactData.Unmarshal(m, b)
}
func (m *ContactData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContactData.Marshal(b, m, deterministic)
}
func (m *ContactData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactData.Merge(m, src)
}
func (m *ContactData) XXX_Size() int {
	return xxx_messageInfo_ContactData.Size(m)
}
func (m *ContactData) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactData.DiscardUnknown(m)
}

var xxx_messageInfo_ContactData proto.InternalMessageInfo

func (m *ContactData) GetSequencingNonce() uint64 {
	if m != nil {
		return m.SequencingNonce
	}
	return 0
}

func (m *ContactData) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *ContactData) GetClientClock() *timestamp.Timestamp {
	if m != nil {
		return m.ClientClock
	}
	return nil
}

func (m *ContactData) GetAckIndex() uint64 {
	if m != nil {
		return m.AckIndex
	}
	return 0
}

func (m *ContactData) GetDoneSending() bool {
	if m != nil {
		return m.DoneSending
	}
	return false
}

func (m *ContactData) GetAllowedMessages() map[string]uint64 {
	if m != nil {
		return m.AllowedMessages
	}
	return nil
}

// An empty message, typically used as a trivial RPC response.
type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c760c55bbe755b6, []int{9}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("fleetspeak.Message_Priority", Message_Priority_name, Message_Priority_value)
	proto.RegisterType((*Address)(nil), "fleetspeak.Address")
	proto.RegisterType((*ValidationInfo)(nil), "fleetspeak.ValidationInfo")
	proto.RegisterMapType((map[string]string)(nil), "fleetspeak.ValidationInfo.TagsEntry")
	proto.RegisterType((*Message)(nil), "fleetspeak.Message")
	proto.RegisterType((*MessageResult)(nil), "fleetspeak.MessageResult")
	proto.RegisterType((*Annotations)(nil), "fleetspeak.Annotations")
	proto.RegisterType((*Annotations_Entry)(nil), "fleetspeak.Annotations.Entry")
	proto.RegisterType((*Label)(nil), "fleetspeak.Label")
	proto.RegisterType((*Signature)(nil), "fleetspeak.Signature")
	proto.RegisterType((*WrappedContactData)(nil), "fleetspeak.WrappedContactData")
	proto.RegisterType((*ContactData)(nil), "fleetspeak.ContactData")
	proto.RegisterMapType((map[string]uint64)(nil), "fleetspeak.ContactData.AllowedMessagesEntry")
	proto.RegisterType((*EmptyMessage)(nil), "fleetspeak.EmptyMessage")
}

func init() {
	proto.RegisterFile("fleetspeak/src/common/proto/fleetspeak/common.proto", fileDescriptor_6c760c55bbe755b6)
}

var fileDescriptor_6c760c55bbe755b6 = []byte{
	// 898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5d, 0x93, 0xdb, 0x34,
	0x14, 0xc5, 0xf9, 0x74, 0xae, 0xb3, 0xd9, 0xa0, 0x2e, 0xe0, 0x86, 0x16, 0x52, 0xc3, 0x43, 0x0a,
	0x8c, 0x33, 0x6c, 0xa7, 0xd3, 0x85, 0x19, 0x06, 0x96, 0xed, 0x0e, 0xcd, 0x4c, 0x53, 0x18, 0x75,
	0x69, 0x1f, 0x3d, 0x5a, 0x59, 0x31, 0x9a, 0x38, 0x92, 0xb1, 0x94, 0x2d, 0x79, 0x86, 0x77, 0x1e,
	0xf8, 0xbf, 0x0c, 0x63, 0xc9, 0x4e, 0xbc, 0x5f, 0x74, 0xfa, 0x26, 0x1d, 0x9d, 0x7b, 0x7c, 0x75,
	0xcf, 0xbd, 0x32, 0x3c, 0x5a, 0xa4, 0x8c, 0x69, 0x95, 0x31, 0xb2, 0x9c, 0xaa, 0x9c, 0x4e, 0xa9,
	0x5c, 0xad, 0xa4, 0x98, 0x66, 0xb9, 0xd4, 0x72, 0x5a, 0x3b, 0xb3, 0x78, 0x68, 0x70, 0x04, 0xbb,
	0x83, 0xd1, 0xdd, 0x44, 0xca, 0x24, 0x65, 0x36, 0xe2, 0x7c, 0xbd, 0x98, 0x12, 0xb1, 0xb1, 0xb4,
	0xd1, 0xa7, 0x57, 0x8f, 0x34, 0x5f, 0x31, 0xa5, 0xc9, 0x2a, 0xb3, 0x84, 0x60, 0x06, 0xdd, 0xe3,
	0x38, 0xce, 0x99, 0x52, 0xe8, 0x63, 0xe8, 0xd1, 0x94, 0x33, 0xa1, 0x23, 0x1e, 0xfb, 0xce, 0xd8,
	0x99, 0xf4, 0xb1, 0x6b, 0x81, 0x59, 0x8c, 0x1e, 0x40, 0x5f, 0xb1, 0xfc, 0x82, 0x53, 0x16, 0x09,
	0xb2, 0x62, 0x7e, 0x63, 0xec, 0x4c, 0x7a, 0xd8, 0x2b, 0xb1, 0x17, 0x64, 0xc5, 0x82, 0x3f, 0x1d,
	0x18, 0xbc, 0x22, 0x29, 0x8f, 0x89, 0xe6, 0x52, 0xcc, 0xc4, 0x42, 0xa2, 0x23, 0x68, 0x69, 0x92,
	0x28, 0xdf, 0x19, 0x37, 0x27, 0xde, 0xe1, 0xe7, 0xe1, 0x2e, 0xe9, 0xf0, 0x32, 0x33, 0x3c, 0x23,
	0x89, 0x3a, 0x15, 0x3a, 0xdf, 0x60, 0x13, 0x31, 0x7a, 0x02, 0xbd, 0x2d, 0x84, 0x86, 0xd0, 0x5c,
	0xb2, 0x8d, 0xc9, 0xa9, 0x87, 0x8b, 0x25, 0x3a, 0x80, 0xf6, 0x05, 0x49, 0xd7, 0x55, 0x1e, 0x76,
	0xf3, 0x6d, 0xe3, 0xc8, 0x09, 0xfe, 0x6d, 0x41, 0x77, 0xce, 0x94, 0x22, 0x09, 0x43, 0xf7, 0x01,
	0x56, 0x76, 0xb9, 0xbb, 0x52, 0xaf, 0x44, 0x66, 0x31, 0xfa, 0x12, 0x3a, 0x4a, 0xae, 0x73, 0x6a,
	0x55, 0xbc, 0xc3, 0x3b, 0xf5, 0xfc, 0xca, 0xaa, 0xe0, 0x92, 0x82, 0xbe, 0x80, 0xf7, 0xed, 0x2a,
	0xaa, 0x49, 0x36, 0x8d, 0xe4, 0xbe, 0x3d, 0x98, 0x6f, 0x85, 0x1f, 0x83, 0x17, 0x33, 0xa5, 0xb9,
	0x30, 0xf7, 0xf3, 0x5b, 0xb7, 0xab, 0xd7, 0x79, 0x45, 0x8d, 0x2b, 0x6d, 0xbd, 0xc9, 0x98, 0xdf,
	0xb6, 0x35, 0x2e, 0xb1, 0xb3, 0x4d, 0xc6, 0xd0, 0xf7, 0xb0, 0x47, 0x73, 0x66, 0xe8, 0x51, 0x61,
	0xa5, 0xdf, 0x31, 0xda, 0xa3, 0xd0, 0xfa, 0x1c, 0x56, 0x3e, 0x87, 0x67, 0x95, 0xcf, 0xb8, 0x5f,
	0x05, 0x14, 0x10, 0x9a, 0x40, 0x2b, 0x26, 0x9a, 0xf8, 0x5d, 0x13, 0x77, 0x70, 0x2d, 0xee, 0x58,
	0x6c, 0xb0, 0x61, 0xa0, 0x13, 0xd8, 0xbf, 0xd8, 0x7a, 0x14, 0x71, 0xb1, 0x90, 0xbe, 0x5b, 0x7e,
	0xec, 0x56, 0x1b, 0xf1, 0xe0, 0xe2, 0x72, 0x03, 0x7c, 0x0d, 0x9d, 0x9c, 0xa9, 0x75, 0xaa, 0xfd,
	0x9e, 0x89, 0xbd, 0x5b, 0x8f, 0x2d, 0x0b, 0x86, 0x0d, 0x01, 0x97, 0x44, 0x74, 0x04, 0x6e, 0x96,
	0x73, 0x99, 0x73, 0xbd, 0xf1, 0x61, 0xec, 0x4c, 0x06, 0x87, 0xf7, 0x6e, 0x08, 0x0a, 0x7f, 0x29,
	0x39, 0x78, 0xcb, 0x46, 0x9f, 0x00, 0x9c, 0x13, 0xba, 0x4c, 0x72, 0xb9, 0x16, 0xb1, 0xef, 0x8d,
	0x9d, 0x89, 0x8b, 0x6b, 0x08, 0xfa, 0x06, 0x3c, 0x22, 0x84, 0xd4, 0x26, 0x3d, 0xe5, 0xf7, 0x4d,
	0x46, 0x1f, 0x5d, 0xb2, 0x65, 0x77, 0x8c, 0xeb, 0xdc, 0xe0, 0x21, 0xb8, 0xd5, 0x07, 0x11, 0x40,
	0x67, 0x7e, 0xfa, 0x74, 0xf6, 0xeb, 0x7c, 0xf8, 0x1e, 0xea, 0x42, 0xf3, 0xf9, 0xcf, 0xaf, 0x87,
	0x0e, 0x72, 0xa1, 0xf5, 0x6c, 0xf6, 0xd3, 0xb3, 0x61, 0x23, 0xf8, 0xdb, 0x81, 0xbd, 0x4b, 0x37,
	0x43, 0xc7, 0x30, 0xc8, 0x72, 0x49, 0x99, 0x52, 0x2c, 0xb6, 0xae, 0x35, 0xde, 0xea, 0xda, 0xde,
	0x36, 0xc2, 0xd8, 0xf6, 0x21, 0x74, 0x16, 0x84, 0xa7, 0xcc, 0xb6, 0x9c, 0x8b, 0xcb, 0x1d, 0xfa,
	0x0c, 0xf6, 0xec, 0x2a, 0xca, 0x19, 0x51, 0x65, 0xaf, 0xf5, 0x70, 0xdf, 0x82, 0xd8, 0x60, 0xc1,
	0x1b, 0xf0, 0x6a, 0x17, 0x43, 0x4f, 0xa0, 0xcb, 0x84, 0xce, 0x39, 0xab, 0xe6, 0xf2, 0xfe, 0x2d,
	0x25, 0x08, 0xed, 0x40, 0x56, 0xec, 0xd1, 0x14, 0xda, 0xef, 0x34, 0x8f, 0xc1, 0x0f, 0xd0, 0x7e,
	0x4e, 0xce, 0x59, 0x7a, 0xed, 0xf5, 0x70, 0xae, 0xbd, 0x1e, 0x85, 0x42, 0x5a, 0x70, 0x2b, 0x05,
	0xb3, 0x09, 0x38, 0xf4, 0x5e, 0xf2, 0x44, 0x10, 0xbd, 0xce, 0x19, 0x1a, 0x83, 0x47, 0x59, 0xae,
	0xf9, 0x82, 0x53, 0xa2, 0x99, 0x49, 0xbe, 0x8f, 0xeb, 0x10, 0xba, 0x07, 0x3d, 0x92, 0x26, 0x85,
	0x4d, 0xbf, 0xad, 0x8c, 0x50, 0x1b, 0xef, 0x80, 0xe2, 0x54, 0x55, 0x62, 0xe5, 0xe8, 0xee, 0x80,
	0xe0, 0x1f, 0x07, 0xd0, 0xeb, 0x9c, 0x64, 0x19, 0x8b, 0x4f, 0xa4, 0xd0, 0x84, 0xea, 0xa7, 0xc5,
	0x18, 0x3c, 0x80, 0x3e, 0xb5, 0xdb, 0xc8, 0x0c, 0x8e, 0x7d, 0x45, 0x3c, 0x5a, 0xa3, 0x3c, 0x06,
	0xd8, 0xca, 0x28, 0xbf, 0x61, 0x6a, 0xfa, 0x41, 0xbd, 0xa6, 0xdb, 0x2b, 0xe0, 0x1a, 0xb1, 0xf0,
	0xae, 0x7c, 0x6f, 0xcd, 0x5d, 0x95, 0xdf, 0x1c, 0x37, 0x0b, 0xef, 0x2c, 0x68, 0x0a, 0xa7, 0x82,
	0xbf, 0x9a, 0xe0, 0xd5, 0xd3, 0x79, 0x08, 0x43, 0xc5, 0x7e, 0x5f, 0x33, 0x41, 0xb9, 0x48, 0x22,
	0x21, 0x05, 0xb5, 0xd5, 0x6c, 0xe1, 0xfd, 0x1d, 0xfe, 0xa2, 0x80, 0xd1, 0x14, 0xdc, 0xf2, 0xe9,
	0xa8, 0x92, 0xba, 0x73, 0xd3, 0xf4, 0x6d, 0x49, 0xe8, 0x3b, 0x28, 0xbf, 0x1d, 0xd1, 0x54, 0xd2,
	0xa5, 0x29, 0xd1, 0xff, 0x77, 0xa9, 0x67, 0xf9, 0x27, 0x05, 0xbd, 0xf8, 0x7f, 0x10, 0xba, 0x8c,
	0xb8, 0x88, 0xd9, 0x1f, 0xa6, 0x0f, 0x5b, 0xd8, 0x25, 0x74, 0x39, 0x2b, 0xf6, 0x45, 0x19, 0x63,
	0x29, 0x58, 0xa4, 0x98, 0x88, 0xb9, 0x48, 0xcc, 0xdb, 0xe6, 0x62, 0xaf, 0xc0, 0x5e, 0x5a, 0x08,
	0xbd, 0x82, 0xfd, 0xe3, 0x34, 0x95, 0x6f, 0x58, 0x3c, 0xaf, 0xd2, 0xee, 0x98, 0xb4, 0xbf, 0xaa,
	0xa7, 0x5d, 0x2b, 0x46, 0x78, 0x85, 0x6e, 0xdb, 0xf5, 0xaa, 0xc8, 0xe8, 0x47, 0x38, 0xb8, 0x89,
	0xf8, 0xb6, 0x2e, 0x6e, 0xd5, 0xff, 0x2a, 0x03, 0xe8, 0x9f, 0xae, 0x32, 0xbd, 0x29, 0x15, 0xce,
	0x3b, 0xa6, 0x18, 0x8f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x43, 0x40, 0x96, 0x3b, 0xbc, 0x07,
	0x00, 0x00,
}
