syntax = "proto3";

package fleetspeak.osquery;

option go_package = "github.com/google/fleetspeak/fleetspeak/src/osquery/proto/fleetspeak_osquery";

enum CompressionType {
  UNCOMPRESSED = 0;
  ZCOMPRESSION = 1;
}

// A LoggedResult message contains data provided to an osquery Logger, containing
// e.g. query results from a snapshot query.
message LoggedResult {
  enum Type {
    UNKNOWN = 0;
    STRING = 1;
    SNAPSHOT = 2;
    HEALTH = 3;
    INIT = 4;
    STATUS = 5;
  }
  Type type = 1;

  CompressionType compress = 2;

  // JSON payload, encoded according to the compress attribute.
  bytes data = 3;
}

// A Queries message contains queries to execute using osquery through the
// osquery distributed inteface.
message Queries {
  // map from query name to SQL text.
  map<string, string> queries = 1;

  // map from query name to SQL text. If a discovery query name matches an entry
  // in queries, that entry will be executed only if the discovery query returns
  // a result.
  map<string, string> discovery = 2;
}

message Row {
  map<string, string> row = 1;
}

message Rows {
  repeated Row rows = 1;
}

// A QueryResults message contains one or more results for a query.
message QueryResults {
  // The query that these results are for.
  string query_name = 1;

  // Status code for the execution of query_name, 0=OK.
  int64 status = 2;

  CompressionType compress = 3;

  // A serialized Rows message, compressed according to the compress attribued.
  bytes Rows = 4;
}
